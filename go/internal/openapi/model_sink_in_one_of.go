/*
 * Svix API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.1.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// SinkInOneOf struct for SinkInOneOf
type SinkInOneOf struct {
	RoutingKey string `json:"routingKey"`
	Type string `json:"type"`
	Uri string `json:"uri"`
}

// NewSinkInOneOf instantiates a new SinkInOneOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSinkInOneOf(routingKey string, type_ string, uri string) *SinkInOneOf {
	this := SinkInOneOf{}
	this.RoutingKey = routingKey
	this.Type = type_
	this.Uri = uri
	return &this
}

// NewSinkInOneOfWithDefaults instantiates a new SinkInOneOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSinkInOneOfWithDefaults() *SinkInOneOf {
	this := SinkInOneOf{}
	return &this
}

// GetRoutingKey returns the RoutingKey field value
func (o *SinkInOneOf) GetRoutingKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RoutingKey
}

// GetRoutingKeyOk returns a tuple with the RoutingKey field value
// and a boolean to check if the value has been set.
func (o *SinkInOneOf) GetRoutingKeyOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.RoutingKey, true
}

// SetRoutingKey sets field value
func (o *SinkInOneOf) SetRoutingKey(v string) {
	o.RoutingKey = v
}

// GetType returns the Type field value
func (o *SinkInOneOf) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *SinkInOneOf) GetTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *SinkInOneOf) SetType(v string) {
	o.Type = v
}

// GetUri returns the Uri field value
func (o *SinkInOneOf) GetUri() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Uri
}

// GetUriOk returns a tuple with the Uri field value
// and a boolean to check if the value has been set.
func (o *SinkInOneOf) GetUriOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Uri, true
}

// SetUri sets field value
func (o *SinkInOneOf) SetUri(v string) {
	o.Uri = v
}

func (o SinkInOneOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["routingKey"] = o.RoutingKey
	}
	if true {
		toSerialize["type"] = o.Type
	}
	if true {
		toSerialize["uri"] = o.Uri
	}
	return json.Marshal(toSerialize)
}

type NullableSinkInOneOf struct {
	value *SinkInOneOf
	isSet bool
}

func (v NullableSinkInOneOf) Get() *SinkInOneOf {
	return v.value
}

func (v *NullableSinkInOneOf) Set(val *SinkInOneOf) {
	v.value = val
	v.isSet = true
}

func (v NullableSinkInOneOf) IsSet() bool {
	return v.isSet
}

func (v *NullableSinkInOneOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSinkInOneOf(val *SinkInOneOf) *NullableSinkInOneOf {
	return &NullableSinkInOneOf{value: val, isSet: true}
}

func (v NullableSinkInOneOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSinkInOneOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


